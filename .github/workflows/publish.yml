name: Go

on: [push]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  GO_VERSION: 1.21.x

jobs:
  go-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
        check-latest: true

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...
  build-and-push-image:
    runs-on: ubuntu-latest
    needs: [ go-build ]
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  release:
    permissions: write-all
    runs-on: ubuntu-latest
    needs: [ go-build ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Go 1.21
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Build with xgo
        if: startsWith(github.ref, 'refs/tags/')
        uses: crazy-max/ghaction-xgo@v3
        with:
          xgo_version: latest
          go_version: ${{ env.GO_VERSION }}
          dest: build
          targets: linux/amd64,linux/arm64
          v: true
          x: false
          ldflags: -s -w
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}
        with:
          name: Release ${{ github.ref}}
          tag_name: ${{ github.ref }}
          draft: true
          prerelease: true
          fail_on_unmatched_files: true
          files: |
            ./build/*
